@using Microsoft.AspNetCore.Http

@{
    string Username = ViewContext.HttpContext.Session.GetString("Username");
    string avatar = ViewContext.HttpContext.Session.GetString("Avatar");
}


<div class="chat-container minimized" id="chatContainer" style="overflow: hidden;">
    <button type="button" id="closeChat" style="position: absolute; top: 5px; right: 5px;">X</button>
    <div></div>
    <div class="mt-3">
        @if (!string.IsNullOrEmpty(ViewBag.Avatar))
        {
            <img src="@avatar" alt="User Avatar" style="width: 50px; height: 50px; border-radius: 50%;" />
        }
        <ul id="discussion" class="discussion-list"></ul>
    </div>
    <div class="mt-5">
        <input style="border: 1px solid #ccc;border-radius: 10px;padding: 0.4rem .4rem;" type="text" id="message" />
        <button style="padding: 0.4rem 0.4rem; border-radius: 4px" type="button" id="sendmessage">
            Send
        </button>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@3.1.12/dist/browser/signalr.min.js"></script>

<script>
    var isMinimized = false;
    var user = @Html.Raw(Json.Serialize(Username));
    var avatar = @Html.Raw(Json.Serialize(avatar));
    var connection = new signalR.HubConnectionBuilder().withUrl("/chat").build();

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendmessage").addEventListener("click", function (event) {
        var message = document.getElementById("message").value;

        connection.invoke("SendMessage", user, message, avatar).catch(function (err) {
            return console.error(err.toString());
        });

        event.preventDefault();
    });

    connection.on("RevceiveMessage", function (user, message, avatar) {
        var encodeMsg = `<img src="${avatar}" alt="${user}'s Avatar" style="width: 20px; height: 20px; border-radius: 50%;" /> ${user}: ${message}`;
        var li = document.createElement("li");

        li.innerHTML = encodeMsg;
        document.getElementById("discussion").appendChild(li);

        var discussionList = document.getElementById("discussion");
        if (discussionList.scrollHeight - discussionList.scrollTop > 100) {
            discussionList.scrollTop = discussionList.scrollHeight;
        }
    });

    document.getElementById("closeChat").addEventListener("click", function () {
        var chatContainer = document.getElementById("chatContainer");

        if (isMinimized) {
            chatContainer.style.width = "184.12px";
            chatContainer.style.height = "197.81px";
            chatContainer.style.maxHeight = "227.83px";
            chatContainer.style.borderRadius = "10px";
            chatContainer.classList.remove("minimized");
            chatContainer.style.backgroundImage = 'none'; 
        } else {
            chatContainer.style.width = "50px";
            chatContainer.style.height = "50px";
            chatContainer.style.borderRadius = "50%";
            chatContainer.style.backgroundImage = 'url("/images/comments.png")';
             chatContainer.style.backgroundRepeat = 'no-repeat';
            chatContainer.classList.add("minimized");
        }

        isMinimized = !isMinimized;
    });


</script>
<style>
    .chat-container {
        position: fixed;
        bottom: 10px;
        right: 10px;
        background-color: #fff;
        border: 1px solid #ccc;
        padding: 10px;
        max-height: 300px;
        max-width: 300px;
        overflow-y: auto;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-image: url("/images/comments.png");
        background-repeat: no-repeat;
    }

        .chat-container img {
            margin-right: 10px;
        }

    .discussion-list {
        list-style-type: none;
        padding: 0;
        margin: 0;
        height: 100px;
        max-height: 100px;
        overflow-y: auto;
    }

    #sendmessage {
        margin-top: 10px;
    }

    .chat-container.minimized {
        width: 50px;
        height: 50px;
        border-radius: 50%;
    }
</style>