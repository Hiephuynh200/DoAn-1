@{
    ViewData["Title"] = "Best Selling Products";
}

<div style="padding-top:7rem">
    <div class="wrapper">
        <div class="rectangle">
            <i id="icon" class="fa-solid fa-chart-line"></i>
            <p class="total">Tổng doanh thu sản phẩm</p>
            <h1 class="price"><strong>@ViewBag.TotalRevenue</strong> VNĐ</h1>
        </div>
        <div class="rectangle1">
            <i id="icon" class="fa-solid fa-bookmark"></i>
            <p class="total">Sản phẩm bán chạy nhất</p>
            <h1 class="price"><strong>@ViewBag.BestSellingProductName</strong></h1>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<div class ="charts-container">
    <div style="flex:1 1 20rem">
        <canvas id="salesChart" style="background: white; box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;" width="550" height="450"></canvas>
    </div>
    <div style="flex:1 4 20rem">
        <canvas id="pieChart" style="background: white; box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;" width="387" height="475"></canvas>
    </div>
    @section scripts {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var bestSellingProducts = @Html.Raw(Json.Serialize(ViewBag.BestSellingProducts));
                var productNames = bestSellingProducts.map(p => p.productName);

                var shortenedProductNames = productNames.map(name => name.length > 10 ? name.substring(0, 10) + '...' : name);

                var totalQuantities = bestSellingProducts.map(p => p.totalQuantity);

                var date = bestSellingProducts.map(p => p.Date);

                var backgroundColors = generateRandomColors(productNames.length);

                var cartQuantities = bestSellingProducts.map(p => p.cartQuantity);

                var addToCart = @Html.Raw(Json.Serialize(ViewBag.ProductWithMaxCart));

                var ctxSalesChart = document.getElementById('salesChart').getContext('2d');
                var salesChart = new Chart(ctxSalesChart, {
                    type: 'bar',
                    data: {
                        labels: shortenedProductNames,
                        datasets: [
                            {
                                data: totalQuantities,
                                backgroundColor: backgroundColors,
                                borderColor: backgroundColors.map(color => color.replace('0.2', '1')),
                                borderWidth: 1,
                            }
                        ]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            },
                            x: {
                                maxRotation: 0,
                                minRotation: 0,
                                autoSkip: true,
                                autoSkipPadding: 10,
                                maxTicksLimit: 10,
                                fontSize: 10
                            }
                        },
                        plugins: {
                            tooltip: {
                                callbacks: {
                                    label: function (context) {
                                        var label = context.dataset.label || '';

                                        if (label) {
                                            label += ': ';
                                        }
                                        label += productNames[context.dataIndex] + ':\nTotal: ' + context.formattedValue;

                                        return label;
                                    }
                                }
                            }
                        }
                    }
                });


                var backgroundColors = generateRandomColors(productNames.length);
                var ctxPieChart = document.getElementById('pieChart').getContext('2d');
                var pieChart = new Chart(ctxPieChart, {
                    type: 'pie',
                    data: {
                        labels: productNames,
                        datasets: [{
                            data: totalQuantities,
                            backgroundColor: backgroundColors,
                            borderColor: backgroundColors.map(color => color.replace('0.2', '1')),
                            borderWidth: 1
                        }]
                    },
                    options: {
                        plugins: {
                            legend: {
                                display: true,
                                position: 'right',
                                labels: {
                                    textAlign: 'justify',
                                }
                            }
                        }
                    }
                });

                function generateRandomColors(count) {
                    var colors = [];
                    for (var i = 0; i < count; i++) {
                        var color = 'rgba(' +
                            Math.floor(Math.random() * 256) + ',' +
                            Math.floor(Math.random() * 256) + ',' +
                            Math.floor(Math.random() * 256) + ',0.2)';
                        colors.push(color);
                    }
                    return colors;
                }
            });
        </script>
    }


</div>

<style>
    .wrapper {
        padding:0 2rem;
        display:flex;
        justify-content:space-around;
    }

    .rectangle {
        position: relative;
        display: flex;
        border: none;
        width: 250px;
        height: 150px;
        border-radius: 10px;
        padding: 1rem;
        background: linear-gradient(#f2709c, #ff9472);
        box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
        flex-direction: column;
        align-ite>ms: center;
        justify-content: center;
    }


    .rectangle3 {
        position: relative;
        display: flex;
        border: none;
        width: 250px;
        height: 150px;
        border-radius: 10px;
        padding: 1rem;
        background: linear-gradient(#50C9C3, #96DEDA);
        box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    .rectangle1 {
        position: relative;
        display: flex;
        border: none;
        width: 250px;
        height: 150px;
        border-radius: 10px;
        padding: 1rem;
        background: linear-gradient( #DDEFBB, #FFEEEE);
        box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }



    #icon {
        position: absolute;
        top: 6px;
        right: 6px;
        color:#fff;
    }

    .total {
        text-transform: uppercase;
        font-size: 1.3rem;
        color: #fff;
        font-weight:5;
        text-shadow: 0px .5rem 1rem rgba(0, 0, 0, .8);
    }

    .total,
    .price {
        text-align: center;
    }

    .charts-container {
        display: flex;
        gap: 1.5rem;
        margin-top: 2rem;
    }
</style>